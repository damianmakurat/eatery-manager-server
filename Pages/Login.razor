@page "/login"
@layout eatery_manager_server.Shared.LoginLayout

@using Microsoft.AspNetCore.Components.Authorization
@using eatery_manager_server.Data.Services
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthProvider
@inject LoginService LoginService

<h3 class="form-title">Zaloguj się</h3>

@if (!string.IsNullOrEmpty(errorMessage))
{
    <div class="alert alert-danger">@errorMessage</div>
}

<EditForm Model="@userLogin" OnValidSubmit="HandleLogin">
    <div class="form-group">
        <label>Login lub email:</label>
        <InputText @bind-Value="userLogin.Username" class="form-control" placeholder="Podaj login lub email" />
    </div>

    <div class="form-group">
        <label>Hasło:</label>
        <InputText @bind-Value="userLogin.Password" type="password" class="form-control" placeholder="Podaj hasło" />
    </div>

    <button type="submit" class="btn-primary">Zaloguj</button>
</EditForm>

<p class="mt-3">
    Nie masz konta? <NavLink href="/register" class="btn-secondary">Zarejestruj się</NavLink>
</p>

@code {
    private eatery_manager_server.Data.Models.Login userLogin = new();
    private string? errorMessage;

    private async Task HandleLogin()
    {
        bool success = await LoginService.LoginAsync(userLogin.Username, userLogin.Password);

        if (success)
        {
            NavigationManager.NavigateTo("/home");
        }
        else
        {
            errorMessage = "Nieprawidłowy login lub hasło.";
        }
    }
}
